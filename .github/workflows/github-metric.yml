name: GitHub Metrics for Specific Repos

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      repos:  # List of repositories to fetch metrics for (e.g., 'repo1 repo2 repo3')
        description: 'List of repositories to fetch metrics for (e.g., repo1 repo2 repo3)'
        required: true
      number_of_days:
        description: 'Number of days to fetch data for (e.g., 30)'
        required: true
        default: '30'

permissions:
  contents: read    # To read the contents of the repository
  issues: read      # To read issues
  pull-requests: read  # To read pull requests
  actions: read  # To use GitHub Actions (for dispatching workflows)

jobs:
  metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install GitHub CLI and jq
        run: sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT_TOKEN }}"

      - name: Generate GitHub metrics report
        run: |
          REPOS="${{ github.event.inputs.repos }}"  # List of repositories from input
          NUMBER_OF_DAYS="${{ github.event.inputs.number_of_days }}"
          OWNER="${{ github.repository_owner }}"  # Automatically fetches the repo owner
          mkdir -p metrics
          
          # Handle multiple repositories (split the string into an array)
          IFS=' ' read -r -a REPOS_ARRAY <<< "$REPOS"
          for REPO in "${REPOS_ARRAY[@]}"; do
            SINCE=$(date -u -d "$NUMBER_OF_DAYS days ago" +"%Y-%m-%dT%H:%M:%SZ")
            echo "ðŸ“Š GitHub Metrics for $REPO" > metrics/$REPO-report.md
            echo "" >> metrics/$REPO-report.md
            
            # Fetching commit count
            echo "ðŸ”„ Fetching commit count..."
            COMMIT_COUNT=$(gh api /repos/$OWNER/$REPO/commits -f since="$SINCE" -q "length" --header "Authorization: token ${{ secrets.PAT_TOKEN }}")
            echo "- Commits in last $NUMBER_OF_DAYS days: $COMMIT_COUNT" >> metrics/$REPO-report.md
            
            # Fetching open issue count
            echo "ðŸ“‚ Fetching open issue count..."
            ISSUE_COUNT=$(gh api /repos/$OWNER/$REPO/issues -f state=open -f per_page=100 -q "length" --header "Authorization: token ${{ secrets.PAT_TOKEN }}")
            echo "- Open Issues: $ISSUE_COUNT" >> metrics/$REPO-report.md
            
            # Fetching open pull request count
            echo "ðŸ”ƒ Fetching open pull request count..."
            PR_COUNT=$(gh api /repos/$OWNER/$REPO/pulls -f state=open -f per_page=100 -q "length" --header "Authorization: token ${{ secrets.PAT_TOKEN }}")
            echo "- Open Pull Requests: $PR_COUNT" >> metrics/$REPO-report.md
            echo "" >> metrics/$REPO-report.md
          done

      - name: Commit and push metrics report
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add metrics/*
          git commit -m "Update GitHub metrics reports" || echo "No changes to commit"
          git push
