name: GitHub Metrics for Specific Repos

on:
  workflow_dispatch:
    inputs:
      repos:
        description: 'List of repositories to fetch metrics for (e.g., repo1 repo2 repo3)'
        required: true
      number_of_days:
        description: 'Number of days to fetch data for (e.g., 30)'
        required: true
        default: '30'

permissions:
  contents: read
  issues: read
  pull-requests: read
  actions: read

jobs:
  metrics:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Generate GitHub metrics report
        run: |
          REPOS="${{ github.event.inputs.repos }}"
          NUMBER_OF_DAYS="${{ github.event.inputs.number_of_days }}"
          OWNER="${{ github.repository_owner }}"
          for REPO in $REPOS; do
            if [ -z "$REPO" ]; then
              echo "Skipping empty repository name"
              continue
            fi
            SINCE=$(date -u -d "$NUMBER_OF_DAYS days ago" +"%Y-%m-%dT%H:%M:%SZ")
            echo "ðŸ“Š GitHub Metrics for $REPO"
            
            echo "ðŸ”„ Fetching commit count..."
            COMMIT_COUNT=$(curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/$OWNER/$REPO/commits?since=$SINCE" | jq length)
            echo "- Commits in last $NUMBER_OF_DAYS days: $COMMIT_COUNT"
            
            echo "ðŸ“‹ Fetching commit details..."
            curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/$OWNER/$REPO/commits?since=$SINCE&per_page=5" | jq '.[] | {author: .commit.author.name, message: .commit.message, date: .commit.author.date}' | jq -r '. | "- \(.author): \(.message) (\(.date))"'
            
            echo "ðŸ“‚ Fetching open issue count..."
            ISSUE_COUNT=$(curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/$OWNER/$REPO/issues?state=open&since=$SINCE" | jq length)
            echo "- Open Issues: $ISSUE_COUNT"
            
            echo "ðŸ”ƒ Fetching open pull request count..."
            PR_COUNT=$(curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/$OWNER/$REPO/pulls?state=open&since=$SINCE" | jq length)
            echo "- Open Pull Requests: $PR_COUNT"
          done
