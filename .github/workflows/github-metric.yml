name: GitHub Metrics for All Repos

on:
  workflow_dispatch:
    inputs:
      number_of_days:
        description: 'Number of days to fetch data for (e.g., 30)'
        required: true
        default: '30'
      metric:
        description: 'Metric to display'
        required: true
        default: 'commits'
        type: choice
        options:
          - commits
          - issues
          - prs

permissions:
  contents: read
  issues: read
  pull-requests: read
  actions: read

jobs:
  fetch_and_process_repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch all repositories
        id: fetch_repos
        run: |
          REPOS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            https://api.github.com/user/repos?per_page=100 | jq -r '.[].name' | xargs)
          echo "Fetched repositories: $REPOS"
          echo "REPOS=$REPOS" >> "$GITHUB_ENV"

      - name: Generate GitHub metrics report
        run: |
          NUMBER_OF_DAYS="${{ github.event.inputs.number_of_days }}"
          METRIC="${{ github.event.inputs.metric }}"
          OWNER="${{ github.repository_owner }}"

          IFS=' ' read -r -a REPO_ARRAY <<< "$REPOS"

          # Initialize output files
          > commit_details.txt
          > issue_details.txt
          > pr_details.txt

          for REPO in "${REPO_ARRAY[@]}"; do
            if [ -z "$REPO" ]; then
              echo "Skipping empty repository name"
              continue
            fi

            echo "ðŸ“Š GitHub Metrics for $REPO"
            SINCE=$(date -u -d "$NUMBER_OF_DAYS days ago" +"%Y-%m-%dT%H:%M:%SZ")

            if [ "$METRIC" = "commits" ]; then
              echo "ðŸ”„ Fetching commit count..."
              COMMITS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
                "https://api.github.com/repos/$OWNER/$REPO/commits?since=$SINCE")

              COMMIT_COUNT=$(echo "$COMMITS" | jq 'if type=="array" then length else 0 end')
              echo "- Commits in last $NUMBER_OF_DAYS days: $COMMIT_COUNT"

              if [ "$COMMIT_COUNT" -gt 0 ]; then
                echo "ðŸ“‹ Fetching commit details..."
                echo "$COMMITS" | jq -r '.[] | "\(.commit.author.name) | \(.commit.message | gsub("[\\r\\n]+"; " ")) | \(.commit.author.date)"' >> commit_details.txt
              else
                echo "No commits found for $REPO." >> commit_details.txt
              fi

            elif [ "$METRIC" = "issues" ]; then
              echo "ðŸ“‚ Fetching open issue count..."
              ISSUES=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
                "https://api.github.com/repos/$OWNER/$REPO/issues?state=open&since=$SINCE")

              ISSUE_COUNT=$(echo "$ISSUES" | jq 'if type=="array" then length else 0 end')
              echo "- Open Issues: $ISSUE_COUNT"

              if [ "$ISSUE_COUNT" -gt 0 ]; then
                echo "ðŸ“‹ Fetching open issue details..."
                echo "$ISSUES" | jq -r '.[] | "\(.title) | \(.user.login) | \(.created_at)"' >> issue_details.txt
              else
                echo "No open issues found for $REPO." >> issue_details.txt
              fi

            elif [ "$METRIC" = "prs" ]; then
              echo "ðŸ”ƒ Fetching open pull request count..."
              PRS=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
                "https://api.github.com/repos/$OWNER/$REPO/pulls?state=open&since=$SINCE")

              PR_COUNT=$(echo "$PRS" | jq 'if type=="array" then length else 0 end')
              echo "- Open Pull Requests: $PR_COUNT"

              if [ "$PR_COUNT" -gt 0 ]; then
                echo "ðŸ“‹ Fetching open pull request details..."
                echo "$PRS" | jq -r '.[] | "\(.title) | \(.user.login) | \(.created_at)"' >> pr_details.txt
              else
                echo "No open pull requests found for $REPO." >> pr_details.txt
              fi

            else
              echo "Invalid metric selected. Please choose 'commits', 'issues', or 'prs'."
            fi
          done

      - name: Upload commit details
        if: ${{ github.event.inputs.metric == 'commits' }}
        uses: actions/upload-artifact@v4
        with:
          name: commit-details
          path: commit_details.txt

      - name: Upload issue details
        if: ${{ github.event.inputs.metric == 'issues' }}
        uses: actions/upload-artifact@v4
        with:
          name: issue-details
          path: issue_details.txt

      - name: Upload pull request details
        if: ${{ github.event.inputs.metric == 'prs' }}
        uses: actions/upload-artifact@v4
        with:
          name: pr-details
          path: pr_details.txt
