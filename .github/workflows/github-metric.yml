name: GitHub Metrics

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Repository (e.g., myorg/myrepo)'
        required: true

jobs:
  metrics:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # Install GitHub CLI and jq
      - name: Install GitHub CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
            sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
            sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      # Generate GitHub metrics report
      - name: Generate GitHub metrics report
        env:
          GH_TOKEN: ${{ github.token }}  # Use the built-in GitHub token for authentication
        run: |
          REPO="${{ github.event.inputs.target_repo }}"
          SINCE=$(date -u -d '30 days ago' +"%Y-%m-%dT%H:%M:%SZ")

          mkdir -p metrics

          echo "ðŸ“Š GitHub Metrics for $REPO" > metrics/report.md
          echo "" >> metrics/report.md

          echo "ðŸ”„ Fetching commit count..."
          COMMIT_COUNT=$(gh api repos/$REPO/commits --paginate -q "length")
          echo "- Commits in last 30 days: $COMMIT_COUNT" >> metrics/report.md

          echo "ðŸ“‚ Fetching issue count..."
          ISSUE_COUNT=$(gh api repos/$REPO/issues -f state=open -q "length")
          echo "- Open Issues: $ISSUE_COUNT" >> metrics/report.md

          echo "ðŸ”ƒ Fetching pull request count..."
          PR_COUNT=$(gh api repos/$REPO/pulls -f state=open -q "length")
          echo "- Open Pull Requests: $PR_COUNT" >> metrics/report.md

          echo ""
          echo "âœ… Report generated:"
          cat metrics/report.md

      # Commit and push metrics report to the repo
      - name: Commit and push metrics report
        env:
          GH_TOKEN: ${{ github.token }}  # Use the built-in GitHub token for authentication
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}
          git add metrics/report.md
          git commit -m "Update GitHub metrics report" || echo "No changes to commit"
          git push
